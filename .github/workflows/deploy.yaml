# This GitHub Actions workflow runs on manual trigger on a branch of a
# repository, and configures the React app in the AWS Amplify Console.
#
# First, the GitHub Action deploys the 'stack.yaml' AWS CloudFormation stack
# to your AWS Account. This stack configures the React app in the AWS Amplify Console.
#
# Then, you need to trigger a first build in the AWS Amplify Console to
# fully configure it.

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The environment of deployment'
        required: true
        default: 'dev'
      region:
        description: 'AWS Region to deploy to'
        required: true
        default: 'us-east-1'

name: Deploy
jobs:
  deploy_source:
    name: deploy lambda from source
    runs-on: ubuntu-latest
    steps:
      - name: checkout source code
        uses: actions/checkout@v1
        
      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'
        
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region}}
        
      #- name: Deploy to AWS CloudFormation
      #  uses: aws-actions/aws-cloudformation-github-deploy@v1
      #  with:
      #      name: sam_template
      #      template: sam_template.yaml
      #      #parameter-overrides: "capabilities=CAPABILITY_IAM"
            
      - name: SAM Deploy
        #if: ${{ github.event.inputs.environment == 'dev'' }}
        #env:
        #  S3_BUCKET: 'va-alexa-lambda'
        run: |
          # Create S3 Bucket to store code
          #aws s3api head-bucket --bucket "${{ steps.vars.outputs.environment }}" 2>/dev/null \
          #  || aws s3 mb s3://${{ steps.vars.outputs.environment }}
          aws cloudformation package --profile ${{github.event.inputs.environment}} \
          --region ${{github.event.inputs.region}} --template-file sam_template.yaml --s3-bucket va-alexa-lambda \
          --output-template-file packaged_template.yaml > /dev/null
          # Run SAM Deploy
          #sam deploy --template-file .aws-sam/build/template.yaml \
          #  --stack-name ${{ steps.vars.outputs.environment }} \
          #  --s3-bucket ${{ steps.vars.outputs.environment }} \
          #  --parameter-overrides \
          #    'ParameterKey=Name,ParameterValue=example \
          #    ParameterKey=Version,ParameterValue=${{ steps.vars.outputs.version }}' \
          #  --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM
        
      #- name: deploy
     # uses: appleboy/lambda-action@master
      #  with:
       #   aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #  aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         # aws_region: ${{ secrets.AWS_REGION }}
          #function_name: lambda-cd
          #deployment_package: deploy.zip
          #zip_file: deploy.zip
          #source: deploy.zip
